{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\n\nexport interface GoogleFitPlugin {\n  /**\n   * Connect to Google Fit\n   * @returns {Promise}\n   * @resolve any\n   */\n  connectToGoogleFit(): Promise<void>;\n\n  /**\n   * Disable Google Fit\n   */\n  disableFit(): Promise<void>;\n\n  /**\n   * Logout from Google Fit\n   */\n  logoutGoogleFit(): Promise<void>;\n\n  /**\n   * openGoogleFit\n   */\n  openGoogleFit(): Promise<void>;\n\n  /**\n   * Returns wether the permissions are ok or not\n   * @returns {Promise}\n   * @resolve AllowedResult\n   */\n  isAllowed(): Promise<AllowedResult>;\n\n  /**\n   * Check if permission is granted\n   */\n  isPermissionGranted(): Promise<AllowedResult>;\n\n  /**\n   * Check if Google Fit is installed\n   */\n  isGoogleFitInstalled(): Promise<{ value: boolean }>;\n\n  /**\n   * Get history\n   * @returns {Promise}\n   * @resolve AccountData\n   */\n  getHistory(call: QueryInput): Promise<DayContainer>;\n\n  /**\n   * setWriteSleepData\n   */\n  setWriteSleepData(call: SetSleepData): Promise<{ value: string }>;\n\n  /**\n   * settingSleepSegment\n   */\n  settingSleepSegment(call: QueryInput): Promise<{ value: string }>;\n\n  /**\n   * writeStepCountData\n   */\n  writeStepCountData(call: SetStepCountData): Promise<{ value: string }>;\n\n  /**\n   * readSleepData\n   */\n  readSleepData(call: QueryInput): Promise<any>;\n\n  /**\n   * Get history activity\n   * @returns {Promise}\n   * @resolve AccountData\n   */\n  getHistoryActivity(call: QueryInput): Promise<ActivityContainer>;\n\n  /**\n   * Get history activity per day\n   * @returns {Promise}\n   * @resolve AccountData\n   */\n  getHistoryActivityPerDay(call: QueryInput): Promise<ActivityContainer>;\n\n  addListener(\n    eventName: 'googleFitAllowed',\n    listenerFunc: (info: GoogleFitPermissionData) => void,\n  ): Promise<PluginListenerHandle>;\n}\n\nexport interface PermissionData {\n  allowed: boolean;\n}\n\nexport interface GoogleFitPermissionData {\n  value: 'success' | 'failure';\n}\n\nexport interface QueryInput {\n  startTime: Date;\n  endTime: Date;\n}\n\nexport interface SetSleepData {\n  startTime: Date;\n  endTime: Date;\n  id: string;\n  sleepStage: number;\n}\n\nexport interface SetStepCountData {\n  startTime: Date;\n  endTime: Date;\n  value: number;\n}\n\nexport interface ActivityContainer {\n  activities: HistoryActivityData[];\n}\n\nexport interface DayContainer {\n  days: HistoryData[];\n}\n\nexport interface HistoryData {\n  start: string;\n  end: string;\n  /**\n  Distance travelled in meters.\n  Valid range: 0â€”100 meters per second\n   */\n  distance: string;\n  /**meters per second */\n  speed: string;\n  /*\n  This data type captures the total calories (in kilocalories) burned by the user, including calories burned at rest (BMR or Basalrate)!\n  */\n  calories: string;\n}\n\nexport interface HistoryActivityData {\n  start: string;\n  end: string;\n  distance?: string;\n  speed?: string;\n  calories?: string;\n  activity?: string;\n  weight?: string;\n  steps?: string;\n  sourceName: string;\n  sourceType: string;\n}\n\nexport interface AllowedResult {\n  allowed: boolean;\n}\n"]}